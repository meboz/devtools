---
# This file i
# SSL Setup

# if enabled, all communication would be verified via SSL
# NOTE that both certificates need to be signed by the same CA in order for this to work
# see http://theforeman.org/projects/smart-proxy/wiki/SSL for more information
:ssl_ca_file: "<%= scope.lookupvar('foreman::proxy_ssl_ca') -%>"
:ssl_certificate: "<%= scope.lookupvar('foreman::proxy_ssl_cert') -%>"
:ssl_private_key: "<%= scope.lookupvar('foreman::proxy_ssl_key') -%>"
# the hosts which the proxy accepts connections from
# commenting the following lines would mean every verified SSL connection allowed
#:trusted_hosts:
#- foreman.prod.domain
#- foreman.dev.domain

# enable the daemon to run in the background
:daemon: true
:daemon_pid: /var/run/foreman-proxy/foreman-proxy.pid

# port used by the proxy
:port: 8443

# Enable TFTP management
:tftp: <%= scope.lookupvar('foreman::bool_proxy_feature_tftp') %>
:tftproot: <%= scope.lookupvar('::tftp::data_dir') || '/var/lib/tftpboot' %>
# Defines the TFTP Servername to use, overrides the name in the subnet declaration
<% if scope.lookupvar('foreman::bool_proxy_tftp_servername_override') -%>
:tftp_servername: <%= scope.lookupvar('foreman::proxy_tftp_servername') %>
<% else -%>
#:tftp_servername: tftp.domain.com
<% end -%>

# Enable DNS management
:dns: <%= scope.lookupvar('foreman::bool_proxy_feature_dns') %>
#:dns_key: /etc/rndc.key
# use this setting if you are managing a dns server which is not localhost though this proxy
#:dns_server: dns.domain.com

# Enable DHCP management
:dhcp: <%= scope.lookupvar('foreman::bool_proxy_feature_dhcp') %>
# The vendor can be either isc or native_ms
:dhcp_vendor: isc
# dhcp_subnets is a Native MS implementation setting. It restricts the subnets queried to a
# subset, so as to reduce the query time.
#:dhcp_subnets: [192.168.205.0/255.255.255.128, 192.168.205.128/255.255.255.128]
:dhcp_config: <%= @dhcpd_config_file %>
:dhcp_leases: <%= @dhcpd_leases_file %>
# Settings for Redhat ISC
#:dhcp_config: /etc/dhcpd.conf
#:dhcp_leases: /var/lib/dhcpd/dhcpd.leases
<% unless @proxy_dhcp_omapi_key.empty? %>
:dhcp_key_name: proxy_key
:dhcp_key_secret: <%= @proxy_dhcp_omapi_key %>
<% else %>
#:dhcp_key_name: secret_key_name
#:dhcp_key_secret: secret_key
<% end %>

# enable PuppetCA management
:puppetca: <%= scope.lookupvar('foreman::bool_proxy_feature_puppetca') %>
#:ssldir: /var/lib/puppet/ssl
#:puppetdir: /etc/puppet

# enable Puppet management
:puppet: <%= scope.lookupvar('foreman::bool_proxy_feature_puppet') %>
#:puppet_conf: /etc/puppet/puppet.conf

# Where our proxy log files are stored
# filename or STDOUT
:log_file: /var/log/foreman-proxy/foreman-proxy.log
# valid options are
# WARN, DEBUG, Error, FATAL, INFO, UNKNOWN
:log_level: INFO
